name: CI for Backend TravelTrove

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    env:
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      FRONTEND_DOMAIN: ${{ secrets.FRONTEND_DOMAIN }}

    services:
      mongo:
        image: mongo:5.0.5
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ connectionStatus: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permissions to gradlew
        working-directory: be-traveltrove
        run: chmod +x gradlew

      - name: Wait for MongoDB
        run: |
          for i in {1..10}; do
            if mongo --host localhost --port 27017 --eval "db.runCommand({ connectionStatus: 1 })" > /dev/null 2>&1; then
              echo "MongoDB is ready!"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 5
          done

      - name: Debug Environment Variables
        run: |
          echo "AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}"
          echo "AUTH0_CLIENT_SECRET: [MASKED]"
          echo "FRONTEND_DOMAIN: ${FRONTEND_DOMAIN}"

      - name: Build and test backend
        working-directory: be-traveltrove
        run: |
          ./gradlew clean build \
            -Dauth0.clientId=${AUTH0_CLIENT_ID} \
            -Dauth0.clientSecret=${AUTH0_CLIENT_SECRET} \
            -Dfrontend.domain=${FRONTEND_DOMAIN} \
            -Dspring.profiles.active=test \
            --stacktrace --info

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: be-traveltrove/build/reports/tests/test/

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-results
          path: be-traveltrove/build/test-results/test/

      - name: Check Application Logs
        if: failure()
        run: |
          cat be-traveltrove/build/reports/tests/test/index.html || echo "Test report not found"
          cat be-traveltrove/build/libs/*.log || echo "Application logs not found"
