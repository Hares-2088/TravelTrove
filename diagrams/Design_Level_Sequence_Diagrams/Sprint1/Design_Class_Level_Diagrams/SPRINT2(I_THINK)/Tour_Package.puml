@startuml
title Standalone Class Diagram for TourPackages

package "tourpackagesubdomain" {


    package "businesslayer" {
        interface TourPackageService {
            + getAllTourPackages() : Flux<TourPackageResponseModel>
            + getTourPackageById(packageId: String) : Mono<TourPackageResponseModel>
            + addTourPackage(tourPackage: TourPackageRequestModel) : Mono<TourPackageResponseModel>
            + updateTourPackage(packageId: String, tourPackageRequestModel: TourPackageRequestModel) : Mono<TourPackageResponseModel>
            + deleteTourPackage(packageId: String) : Mono<Void>
        }

        class TourPackageServiceImpl {
            - tourPackageRepository: TourPackageRepository
            + getAllTourPackages() : Flux<TourPackageResponseModel>
            + getTourPackageById(packageId: String) : Mono<TourPackageResponseModel>
            + addTourPackage(tourPackage: TourPackageRequestModel) : Mono<TourPackageResponseModel>
            + updateTourPackage(packageId: String, tourPackageRequestModel: TourPackageRequestModel) : Mono<TourPackageResponseModel>
            + deleteTourPackage(packageId: String) : Mono<Void>
        }
    }

    package "dataaccesslayer" {
        class TourPackage {
            + _id: ObjectId
            + packageId: String
            + name: String
            + description: String
            + startDate: DateTime
            + endDate: DateTime
            + priceForOne: Decimal
            + priceForTwo: Decimal
            + priceForThree: Decimal
            + airportId: String
            + tourId: String
        }

        interface TourPackageRepository extends ReactiveMongoRepository {
            + findTourPackageByPackageId(packageId: String) : Mono<TourPackage>
            + findAll() : Flux<TourPackage>
        }
    }

    package "presentationlayer" {
        class TourPackageRequestModel {
            + name: String
            + description: String
            + startDate: DateTime
            + endDate: DateTime
            + priceForOne: Decimal
            + priceForTwo: Decimal
            + priceForThree: Decimal
            + airportId: String
            + tourId: String
        }

        class TourPackageResponseModel {
            + packageId: String
            + name: String
            + description: String
            + startDate: DateTime
            + endDate: DateTime
            + priceForOne: Decimal
            + priceForTwo: Decimal
            + priceForThree: Decimal
            + airportId: String
            + tourId: String
        }

        class TourPackageController {
            - tourPackageService: TourPackageService
            + getAllTourPackages() : Flux<TourPackageResponseModel>
            + getTourPackageById(packageId: String) : Mono<ResponseEntity<TourPackageResponseModel>>
            + addTourPackage(tourPackageRequestModel: TourPackageRequestModel) : Mono<TourPackageResponseModel>
            + updateTourPackage(packageId: String, tourPackageRequestModel: TourPackageRequestModel) : Mono<ResponseEntity<TourPackageResponseModel>>
            + deleteTourPackage(packageId: String) : Mono<Void>
        }
    }

    package "utils" {
        class EntityModelUtil {
            + toTourPackageResponseModel(tourPackage: TourPackage) : TourPackageResponseModel
            + toTourPackageEntity(tourPackageRequestModel: TourPackageRequestModel) : TourPackage
            + generateUUIDString() : String
        }
    }

    TourPackageServiceImpl -down-|> TourPackageService : implements
    TourPackageServiceImpl -down-> TourPackageRepository : uses
    TourPackageController -down-> TourPackageService : uses
    TourPackageController -down-> TourPackageRequestModel : uses
    TourPackageController -down-> TourPackageResponseModel : uses
    TourPackageServiceImpl -down-> TourPackage : manipulates
    TourPackageServiceImpl -down-> TourPackageRequestModel : uses
    TourPackageServiceImpl -down-> TourPackageResponseModel : returns
    EntityModelUtil -up-^ TourPackage : converts
    EntityModelUtil -up-^ TourPackageRequestModel : maps
    EntityModelUtil -up-^ TourPackageResponseModel : maps
}

@enduml
