@startuml
title Hotel Viewing Sequence Diagram for Customer

actor Customer as "<<Actor>>\nCustomer"

participant ReactApplication as "<<View>>\nReactApplication"
participant TourPackagePage as "<<View>>\nTourPackagePage"
participant TourPackageController as "<<Controller>>\nTourPackageController"
participant TourPackageService as "<<Service>>\nTourPackageService"
participant TourPackageEntity as "<<Entity>>\nTourPackageEntity"
participant TourPackageRepository as "<<Repository>>\nTourPackageRepository"
participant HotelController as "<<Controller>>\nHotelController"
participant HotelService as "<<Service>>\nHotelService"
participant HotelEntity as "<<Entity>>\nHotelEntity"
participant HotelRepository as "<<Repository>>\nHotelRepository"
participant Database as "<<Database>>"
participant TourPackageResponseModel as "<<Model>>\nTourPackageResponseModel"
participant HotelResponseModel as "<<Model>>\nHotelResponseModel"

Customer -> ReactApplication : Access Tour Package Page
activate ReactApplication

ReactApplication -> TourPackagePage : render()
activate TourPackagePage
deactivate ReactApplication

TourPackagePage --> Customer : Display placeholder for tour package and related hotels

Customer -> TourPackagePage : Request tour package details
TourPackagePage -> TourPackageController : GET /api/v1/tour-packages/{tourId}
activate TourPackageController

TourPackageController -> TourPackageService : getTourPackageById(tourId)
activate TourPackageService

TourPackageService -> TourPackageRepository : findTourPackageByTourId(tourId)
activate TourPackageRepository

TourPackageRepository -> Database : SELECT * FROM tour_packages WHERE tourId = tourId
activate Database
Database --> TourPackageRepository : Tour package data
deactivate Database

TourPackageRepository --> TourPackageService : TourPackageEntity
deactivate TourPackageRepository

TourPackageService -> TourPackageResponseModel : Map entity to response model
activate TourPackageResponseModel
TourPackageResponseModel --> TourPackageService : Response model ready
deactivate TourPackageResponseModel

TourPackageService --> TourPackageController : TourPackageResponseModel
deactivate TourPackageService

TourPackageController --> TourPackagePage : Tour package details
deactivate TourPackageController

TourPackagePage --> Customer : Display tour package details

Customer -> TourPackagePage : Request related hotels
TourPackagePage -> HotelController : GET /api/v1/hotels/tour/{tourId}
activate HotelController

HotelController -> HotelService : getHotelsByTourId(tourId)
activate HotelService

HotelService -> HotelRepository : findAllByTourId(tourId)
activate HotelRepository

HotelRepository -> Database : SELECT * FROM hotels WHERE tourId = tourId
activate Database
Database --> HotelRepository : List of related hotels
deactivate Database

HotelRepository --> HotelService : List of hotel entities
deactivate HotelRepository

HotelService -> HotelResponseModel : Map entities to response models
activate HotelResponseModel
HotelResponseModel --> HotelService : Response models ready
deactivate HotelResponseModel

HotelService --> HotelController : List of HotelResponseModels
deactivate HotelService

HotelController --> TourPackagePage : Response with related hotels
deactivate HotelController

TourPackagePage --> Customer : Display related hotels

@enduml
