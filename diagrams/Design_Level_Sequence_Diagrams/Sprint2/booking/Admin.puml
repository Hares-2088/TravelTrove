@startuml
title Booking Management Sequence Diagram for Admin

actor Admin
participant ReactApplication
participant BookingsPage
participant BookingController
participant BookingService
participant BookingEntity
participant BookingRepository
participant Database
participant BookingResponseModel

Admin -> ReactApplication : Access Bookings Page
activate ReactApplication

ReactApplication -> BookingsPage : render()
activate BookingsPage
deactivate ReactApplication

BookingsPage --> Admin : Display list of customer bookings

opt View All Bookings
    Admin -> BookingsPage : Request all bookings
    BookingsPage -> BookingController : GET /api/v1/bookings
    activate BookingController

    BookingController -> BookingService : getAllBookings()
    activate BookingService

    BookingService -> BookingRepository : findAll()
    activate BookingRepository

    BookingRepository -> Database : SELECT * FROM bookings
    activate Database
    Database --> BookingRepository : List of bookings
    deactivate Database

    BookingRepository --> BookingService : List of booking entities
    deactivate BookingRepository

    BookingService -> BookingResponseModel : Map entities to response models
    activate BookingResponseModel
    BookingResponseModel --> BookingService : Response models ready
    deactivate BookingResponseModel

    BookingService --> BookingController : List of BookingResponseModels
    deactivate BookingService

    BookingController --> BookingsPage : Response with all bookings
    deactivate BookingController

    BookingsPage --> Admin : Display all bookings
end

opt Remove a Customer Booking
    Admin -> BookingsPage : Select a booking to delete
    BookingsPage -> BookingController : DELETE /api/v1/bookings/{bookingId}
    activate BookingController

    BookingController -> BookingService : deleteBooking(bookingId)
    activate BookingService

    BookingService -> BookingRepository : findById(bookingId)
    activate BookingRepository

    BookingRepository -> Database : SELECT * FROM bookings WHERE id = bookingId
    Database --> BookingRepository : Booking found
    deactivate Database

    BookingRepository --> BookingService : BookingEntity
    deactivate BookingRepository

    BookingService -> BookingRepository : delete(bookingId)
    activate BookingRepository
    BookingRepository -> Database : DELETE FROM bookings WHERE id = bookingId
    Database --> BookingRepository : Deletion successful
    deactivate BookingRepository

    BookingService --> BookingController : Deletion confirmation
    deactivate BookingService

    BookingController --> BookingsPage : Booking deleted successfully
    deactivate BookingController

    BookingsPage --> Admin : Notify booking removed
end

@enduml
